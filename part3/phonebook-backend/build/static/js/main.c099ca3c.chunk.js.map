{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","text","value","onChangeHandler","onChange","PersonForm","onSubmitHandler","newName","handleOnNameChange","newPhoneNumber","handleOnPhoneNumberChange","onSubmit","type","Persons","persons","personsToShow","handleOnClickDeletePerson","map","person","name","number","onClick","Notification","message","className","Error","App","useState","setPersons","setNewName","setNewPhoneNumber","nameFilter","setNameFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","catch","error","setTimeout","normalize","filter","toLowerCase","includes","event","target","preventDefault","some","modifiedPerson","find","window","confirm","returnedPerson","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c099ca3c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst del = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response)\n}\n\nexport default {getAll, create, update, del}","import React, {useEffect, useState} from 'react'\nimport personsService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newPhoneNumber, setNewPhoneNumber] = useState('')\n    const [nameFilter, setNameFilter] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n            .catch(error => {\n                setErrorMessage(error.response.data.error)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n    }, [])\n\n    const handleOnNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleOnPhoneNumberChange = (event) => {\n        setNewPhoneNumber(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (persons.some((person => person.name === newName))) {\n            const modifiedPerson = {...persons.find(person => person.name === newName), number: newPhoneNumber}\n            if (window.confirm(`${modifiedPerson.name} is already added to phonebook. Replace the old number with a new one?`)) {\n                personsService\n                    .update(modifiedPerson.id, modifiedPerson)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id === returnedPerson.id ? returnedPerson : person))\n                        setNewName('')\n                        setNewPhoneNumber('')\n                        setNotificationMessage(`Modified ${returnedPerson.name} `)\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                        }, 5000)\n                    })\n            }\n        } else {\n            const newPerson = {\n                name: newName,\n                number: newPhoneNumber,\n            }\n            personsService.create(newPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewPhoneNumber('')\n                    setNotificationMessage(`Added ${returnedPerson.name} `)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setErrorMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n\n    }\n\n    const personsToShow = nameFilter.normalize() === ''.normalize()\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n\n    const handleOnChangeNameFilter = (event) => {\n        setNameFilter(event.target.value)\n    }\n\n    const handleOnClickDeletePerson = ({person: personToDelete}) => {\n        if (window.confirm(`Delete ${personToDelete.name}`)) {\n            personsService.del(personToDelete.id)\n                .then(response => {\n                    setPersons(persons.filter(person => person.id !== personToDelete.id))\n                })\n                .catch(error => {\n                    setErrorMessage(`Information of '${personToDelete.name}' was already removed from server`)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                    setPersons(persons.filter(person => person.id !== personToDelete.id))\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notificationMessage}/>\n            <Error message={errorMessage}/>\n            <Filter text=\"Filter shown with :\" value={nameFilter} onChangeHandler={handleOnChangeNameFilter}/>\n            <h3>Add a new</h3>\n            <PersonForm\n                onSubmitHandler={addPerson}\n                newName={newName}\n                handleOnNameChange={handleOnNameChange}\n                newPhoneNumber={newPhoneNumber}\n                handleOnPhoneNumberChange={handleOnPhoneNumberChange}\n            />\n            <h3>Numbers</h3>\n            <Persons persons={persons} personsToShow={personsToShow}\n                     handleOnClickDeletePerson={handleOnClickDeletePerson}/>\n        </div>\n    )\n}\n\nconst Filter = ({text, value, onChangeHandler}) => {\n    return (\n        <div>\n            {text}\n            <input value={value} onChange={onChangeHandler}/>\n        </div>\n    )\n}\n\nconst PersonForm = ({onSubmitHandler, newName, handleOnNameChange, newPhoneNumber, handleOnPhoneNumberChange}) => {\n    return (\n        <form onSubmit={onSubmitHandler}>\n            <div>\n                name: <input value={newName} onChange={handleOnNameChange}/>\n            </div>\n            <div>number: <input value={newPhoneNumber} onChange={handleOnPhoneNumberChange}/></div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Persons = ({persons, personsToShow, handleOnClickDeletePerson}) => {\n    return (\n        personsToShow.map((person) => {\n            return (\n                <p key={person.name}>\n                    {person.name} {person.number}\n                    <button onClick={() => handleOnClickDeletePerson({person})}>Delete</button>\n                </p>\n            )\n        })\n    )\n}\n\nconst Notification = ({message}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nconst Error = ({message}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}